{"version":3,"sources":["webpack://ore-ore-gatsbyjs-template/./src/components/atoms/social-icons.tsx","webpack://ore-ore-gatsbyjs-template/./src/components/atoms/social-link.tsx","webpack://ore-ore-gatsbyjs-template/./src/templates/member.tsx"],"names":["TwitterIcon","size","className","src","alt","width","SIZE","height","GithubIcon","TwitterLink","username","href","target","rel","GithubLink","member","data","Error","SEO","title","nameJa","keywords","name","memberName","belongs","faculty","grade","description","social","twitter","github","teams","map","team","key","id","teamName","Link","to","leader","skills","skill","level","contributions","contribution","portfolio","sortBy","activities","reverse","slice","activity","frontmatter","date"],"mappings":"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","file":"component---src-templates-member-tsx-44852585ff3a7c4318a9.js","sourcesContent":["import { SIZE, SIZE_TYPE } from '@/lib/size'\nimport * as React from 'react'\n\ntype TwitterIconProps = {\n  size?: SIZE_TYPE\n  className?: string\n}\n\nexport const TwitterIcon = ({\n  size = 'md',\n  className = '',\n}: TwitterIconProps): JSX.Element => {\n  return (\n    <img\n      className={`${className}`}\n      src=\"/social-icon/twitter.svg\"\n      alt=\"twitter\"\n      width={SIZE[size]}\n      height={SIZE[size]}\n    />\n  )\n}\n\ntype GithubIconProps = {\n  size?: SIZE_TYPE\n  className?: string\n}\n\nexport const GithubIcon = ({\n  size = 'md',\n  className = '',\n}: GithubIconProps): JSX.Element => {\n  return (\n    <img\n      className={`${className}`}\n      src=\"/social-icon/github.svg\"\n      alt=\"github\"\n      width={SIZE[size]}\n      height={SIZE[size]}\n    />\n  )\n}\n","import * as React from 'react'\n\ntype TwitterLinkProps = {\n  username: string\n}\n\nexport const TwitterLink = ({ username }: TwitterLinkProps): JSX.Element => {\n  return (\n    <a\n      className=\"hover:underline\"\n      href={`https://twitter.com/${username}`}\n      target=\"_blank\"\n      rel=\"noreferrer\">\n      @{username}\n    </a>\n  )\n}\n\ntype GithubLinkProps = {\n  username: string\n}\n\nexport const GithubLink = ({ username }: GithubLinkProps): JSX.Element => {\n  return (\n    <a\n      className=\"hover:underline\"\n      href={`https://github.com/${username}`}\n      target=\"_blank\"\n      rel=\"noreferrer\">\n      @{username}\n    </a>\n  )\n}\n","import { MemberIcon } from '@/components/atoms/member-icon'\nimport { GithubIcon, TwitterIcon } from '@/components/atoms/social-icons'\nimport { GithubLink, TwitterLink } from '@/components/atoms/social-link'\nimport { TeamIcon } from '@/components/atoms/team-icon'\nimport { Section } from '@/components/molecules/section'\nimport { SEO } from '@/components/organisms/SEO'\nimport { MemberName } from '@/data/member'\nimport type { MemberTemplateQuery } from '@gql'\nimport { graphql, Link } from 'gatsby'\nimport { sortBy } from 'lodash-es'\nimport * as React from 'react'\n\nexport const query = graphql`\n  query MemberTemplate($slug: String!) {\n    member(id: { eq: $slug }) {\n      belongs {\n        grade\n        faculty {\n          name\n          nameJa\n        }\n      }\n      contributions {\n        id\n        portfolio {\n          id\n          name\n          nameJa\n        }\n      }\n      description\n      isGraduated\n      joinedAt\n      name\n      nameJa\n      position\n      skills {\n        level\n        id\n        skill {\n          id\n          description\n          name\n        }\n      }\n      social {\n        github\n        twitter\n      }\n      teams {\n        leader\n        id\n        team {\n          name\n          nameJa\n        }\n      }\n      activities {\n        id\n        frontmatter {\n          title\n          date\n          team {\n            name\n            nameJa\n            id\n          }\n        }\n      }\n    }\n  }\n`\n\ntype MemberTemplateProps = {\n  data: MemberTemplateQuery\n}\n\nconst MemberTemplate = ({\n  data: { member },\n}: MemberTemplateProps): JSX.Element => {\n  if (!member) {\n    throw Error('Member not found')\n  }\n  return (\n    <>\n      <SEO\n        title={`${member.nameJa} | メンバー`}\n        keywords={[member.name, member?.nameJa]}\n      />\n      <section className=\"px-8 py-6\">\n        <div>\n          <MemberIcon\n            className=\"rounded-full\"\n            memberName={member.name as MemberName}\n            size=\"xl\"\n          />\n        </div>\n\n        <div className=\"mb-3\">\n          <p>\n            {member.nameJa}\n            <span className=\"text-sm ml-3\">\n              {member.belongs.faculty.nameJa} {member.belongs.grade}年\n            </span>\n          </p>\n          <p className=\"px-5 text-sm\">{member.description}</p>\n        </div>\n\n        <div className=\"mb-3 flex flex-row justify-around max-w-sm\">\n          {member.social?.twitter ? (\n            <div className=\"\">\n              <TwitterIcon size=\"xs\" className=\"inline\" />\n              <TwitterLink username={member.social.twitter} />\n            </div>\n          ) : null}\n          {member.social?.github ? (\n            <div className=\"\">\n              <GithubIcon size=\"xs\" className=\"inline\" />\n              <GithubLink username={member.social.github} />\n            </div>\n          ) : null}\n        </div>\n\n        <Section title=\"所属チーム\">\n          <ul className=\"mb-1\">\n            {member.teams?.map?.((team) => (\n              <li key={team.id}>\n                <TeamIcon teamName={team.team.name} size=\"xs\" />\n                <Link\n                  className=\"hover:underline\"\n                  to={`/teams/${team.team.name}`}>\n                  {team.leader ? '🚩' : <span className=\"inline-block w-4\" />}\n                  {team.team.nameJa || team.team.name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </Section>\n\n        <Section title=\"スキル\">\n          <ul className=\"mb-1\">\n            {member.skills?.map?.((skill) => (\n              <li key={skill.id}>\n                {skill.skill.name} lv.{skill.level}\n              </li>\n            ))}\n          </ul>\n        </Section>\n\n        <Section title=\"ポートフォリオ\">\n          <ul className=\"mb-1\">\n            {member.contributions?.map?.((contribution) => (\n              <li key={contribution.id}>\n                {contribution.portfolio.nameJa || contribution.portfolio.name}\n              </li>\n            ))}\n          </ul>\n        </Section>\n\n        <Section title=\"活動記録\">\n          <ul className=\"mb-1\">\n            {sortBy(member.activities ?? [], 'frontmatter.date')\n              ?.reverse()\n              ?.slice(0, 5)\n              ?.map?.((activity) => (\n                <li key={activity?.id}>\n                  {activity?.frontmatter?.date}{' '}\n                  {activity?.frontmatter?.team ? (\n                    <>\n                      <Link\n                        className=\"hover:underline\"\n                        to={`/teams/${activity.frontmatter.team.name}`}>\n                        {activity.frontmatter.team.nameJa ||\n                          activity.frontmatter.team.name}\n                      </Link>{' '}\n                    </>\n                  ) : null}\n                  {activity?.frontmatter?.title}{' '}\n                </li>\n              ))}\n          </ul>\n        </Section>\n      </section>\n    </>\n  )\n}\nexport default MemberTemplate\n"],"sourceRoot":""}