{"version":3,"sources":["webpack:///./src/components/atoms/hero-image.tsx","webpack:///./src/pages/index.tsx"],"names":["HeroImage","props","image","useStaticQuery","file","childImageSharp","fluid","Error","style","height","base64","undefined","srcWebp","srcSetWebp","imgStyle","objectFit","IndexPage","data","Helmet","site","siteMetadata","title","className","to"],"mappings":"wuBAOO,IAAMA,EAAsC,SAAC,GAAiB,QAAZC,EAAY,oBAC7DC,EAAQC,YAAc,cAY5B,GAAI,UAACD,EAAME,YAAP,iBAAC,EAAYC,uBAAb,QAAC,EAA6BC,MAChC,MAAMC,MAAM,wBAEd,OACE,gBAAC,IAAD,eACEC,MAAO,CACLC,OAAQ,uBAENR,EAJN,CAKEK,MAAK,OACAJ,EAAME,KAAKC,gBAAgBC,OAD3B,IAEHI,OAAQR,EAAME,KAAKC,gBAAgBC,MAAMI,aAAUC,EACnDC,QAASV,EAAME,KAAKC,gBAAgBC,MAAMO,iBAAcF,EACxDE,WAAYX,EAAME,KAAKC,gBAAgBC,MAAMO,iBAAcF,IAE7DG,SAAU,CACRC,UAAW,QACXN,OAAQ,0B,YCODO,UAxBG,SAAC,GAA0C,QAAxCC,EAAwC,EAAxCA,KACnB,OACE,2BACE,gBAACC,EAAA,EAAD,KACE,kDAAkBD,EAAKE,YAAvB,iBAAkB,EAAWC,oBAA7B,aAAkB,EAAyBC,SAE7C,uBAAKC,UAAU,YACb,gBAAC,EAAD,MACA,qBAAGA,UAAU,6CAAb,sBAGA,sBAAIA,UAAU,qDACZ,0BACE,gBAAC,IAAD,CAAMC,GAAG,eAAT,UAEF,0BACE,gBAAC,IAAD,CAAMA,GAAG,UAAT","file":"component---src-pages-index-tsx-142b976ad2228cf98593.js","sourcesContent":["import type { HeroImageQuery } from '@gql'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Img, { GatsbyImageProps } from 'gatsby-image'\nimport * as React from 'react'\n\ntype HeroImageProps = Pick<GatsbyImageProps, 'className'>\n\nexport const HeroImage: React.FC<HeroImageProps> = ({ ...props }) => {\n  const image = useStaticQuery<HeroImageQuery>(graphql`\n    query HeroImage {\n      file(relativePath: { eq: \"site/hero.png\" }) {\n        childImageSharp {\n          fluid(fit: COVER) {\n            ...GatsbyImageSharpFluid_withWebp\n          }\n        }\n      }\n    }\n  `)\n\n  if (!image.file?.childImageSharp?.fluid) {\n    throw Error('Hero Image not found')\n  }\n  return (\n    <Img\n      style={{\n        height: 'calc(100vh - 72px)',\n      }}\n      {...props}\n      fluid={{\n        ...image.file.childImageSharp.fluid,\n        base64: image.file.childImageSharp.fluid.base64 || undefined,\n        srcWebp: image.file.childImageSharp.fluid.srcSetWebp || undefined,\n        srcSetWebp: image.file.childImageSharp.fluid.srcSetWebp || undefined,\n      }}\n      imgStyle={{\n        objectFit: 'cover',\n        height: 'calc(100vh - 72px)',\n      }}\n    />\n  )\n}\n","import { HeroImage } from '@/components/atoms/hero-image'\nimport type { IndexQueryQuery } from '@gql'\nimport { graphql, Link } from 'gatsby'\nimport * as React from 'react'\nimport { Helmet } from 'react-helmet'\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\ninterface IndexPageProps {\n  data: IndexQueryQuery\n}\n\nconst IndexPage = ({ data }: IndexPageProps): JSX.Element => {\n  return (\n    <div>\n      <Helmet>\n        <title>{`ようこそ | ${data.site?.siteMetadata?.title}`}</title>\n      </Helmet>\n      <div className=\"relative\">\n        <HeroImage />\n        <p className=\"absolute top-6 left-10 text-3xl text-main\">\n          Welcome to Engine!\n        </p>\n        <ul className=\"absolute right-0 bottom-0 px-10 py-10 md:right-10\">\n          <li>\n            <Link to=\"/portfolios\">▷ 制作物</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">▷ About</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}