{"version":3,"sources":["webpack:///./src/components/atoms/page-header.tsx","webpack:///./src/components/atoms/team-icon.tsx","webpack:///./src/components/molecules/MemberCard.tsx","webpack:///./src/components/organisms/Tab.tsx","webpack:///./src/pages/members.tsx","webpack:///./src/components/atoms/member-icon.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["PageHeader","pageName","props","images","useStaticQuery","image","React","allFile","nodes","find","node","name","childImageSharp","fluid","Error","style","height","base64","undefined","srcWebp","srcSetWebp","imgStyle","objectFit","TeamIcon","teamName","size","files","fixedImage","teamsOne","defaultImage","fixed","MemberCard","member","className","memberName","to","nameJa","teams","map","team","key","id","Tab","tabs","items","children","selectedTab","setSelectedTab","tab","onClick","minHeight","item","i","MembersPage","data","Helmet","site","siteMetadata","title","現役","activeMemvers","OB","graduatedMembers","MemberIcon","membersOne","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"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","file":"component---src-pages-members-tsx-09181e4959c18ce11691.js","sourcesContent":["import type { PageHeaderQuery } from '@gql'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Img, { GatsbyImageProps } from 'gatsby-image'\nimport * as React from 'react'\n\ntype PageHeaderProps = Pick<GatsbyImageProps, 'className'> & {\n  pageName: 'members'\n}\n\nexport const PageHeader: React.FC<PageHeaderProps> = ({\n  pageName,\n  ...props\n}) => {\n  const images = useStaticQuery<PageHeaderQuery>(graphql`\n    query PageHeader {\n      allFile(filter: { relativeDirectory: { eq: \"site\" } }) {\n        nodes {\n          childImageSharp {\n            fluid(fit: COVER) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n          name\n        }\n      }\n    }\n  `)\n\n  const image = React.useMemo(() => {\n    const image = images.allFile.nodes.find(\n      (node) => node.name === `${pageName}-header`\n    )\n    if (image?.childImageSharp?.fluid) {\n      return image.childImageSharp.fluid\n    }\n    throw Error(`Image site/${pageName}-header.{png,jpeg...} not found!`)\n  }, [images, pageName])\n\n  return (\n    <Img\n      style={{\n        height: '200px',\n      }}\n      {...props}\n      fluid={{\n        ...image,\n        base64: image.base64 || undefined,\n        srcWebp: image.srcSetWebp || undefined,\n        srcSetWebp: image.srcSetWebp || undefined,\n      }}\n      imgStyle={{\n        objectFit: 'cover',\n        height: 200,\n      }}\n    />\n  )\n}\n","import { TeamName } from '@/data/team'\nimport type { TeamIconQuery } from '@gql'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Img, { GatsbyImageProps } from 'gatsby-image'\nimport * as React from 'react'\n\ntype TeamIconProps = Pick<GatsbyImageProps, 'className'> & {\n  teamName: TeamName\n  size: 'sm' | 'md' | 'lg' | 'xl'\n}\n\nexport const TeamIcon: React.FC<TeamIconProps> = ({\n  teamName,\n  size,\n  ...props\n}) => {\n  const files = useStaticQuery<TeamIconQuery>(graphql`\n    query TeamIcon {\n      allFile(filter: { relativeDirectory: { eq: \"team-images\" } }) {\n        nodes {\n          name\n          sm: childImageSharp {\n            fixed(width: 32, height: 32) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n          md: childImageSharp {\n            fixed(width: 48, height: 48) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n          lg: childImageSharp {\n            fixed(width: 64, height: 64) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n          xl: childImageSharp {\n            fixed(width: 128, height: 128) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n        }\n      }\n    }\n  `)\n  const fixedImage = React.useMemo(() => {\n    const teamsOne = files.allFile.nodes.find((node) => node.name === teamName)\n    if (teamsOne) return teamsOne\n    const defaultImage = files.allFile.nodes.find(\n      (node) => node.name === 'default'\n    )\n    if (defaultImage) return defaultImage\n    throw Error('Default Image not found')\n  }, [teamName, files])\n  const image = React.useMemo(() => {\n    const image = fixedImage[size]?.fixed\n    if (!image) throw Error(\"Image can't resolved\")\n    return image\n  }, [fixedImage, size])\n\n  return (\n    <Img\n      {...props}\n      fixed={{\n        ...image,\n        base64: image.base64 || undefined,\n        srcWebp: image.srcSetWebp || undefined,\n        srcSetWebp: image.srcSetWebp || undefined,\n      }}\n    />\n  )\n}\n","import { MemberName } from '@/data/member'\nimport { TeamName } from '@/data/team'\nimport { MemberInfoFragment } from '@gql'\nimport { Link } from 'gatsby'\nimport * as React from 'react'\nimport { MemberIcon } from '../atoms/member-icon'\nimport { TeamIcon } from '../atoms/team-icon'\n\ntype MemberCardProps = {\n  member: MemberInfoFragment\n}\n\nexport const MemberCard = ({ member }: MemberCardProps): JSX.Element => {\n  return (\n    <div className=\"flex\">\n      <div className=\"flex justify-center items-center p-3\">\n        <MemberIcon\n          className=\"rounded-full\"\n          memberName={member.name as MemberName}\n          size=\"lg\"\n        />\n      </div>\n      <div className=\"flex flex-col p-3 pl-4\">\n        <div className=\"text-lg\">\n          <Link to={`/members/${member.name}`}>{member.nameJa} ▷</Link>\n        </div>\n        <div>\n          {member.teams\n            ? member.teams.map((team) => (\n                <TeamIcon\n                  className=\"mr-3\"\n                  key={team.id}\n                  teamName={team.team.name as TeamName}\n                  size=\"sm\"\n                />\n              ))\n            : null}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\n\ntype TabProps<T extends string, V extends Record<string, unknown>> = {\n  tabs: [T, ...T[]]\n  items: {\n    [key in T]: V[]\n  }\n  children: (item: V, idx: number) => JSX.Element\n}\n\nexport const Tab = <T extends string, V extends Record<string, unknown>>({\n  tabs,\n  items,\n  children,\n}: TabProps<T, V>): JSX.Element => {\n  const [selectedTab, setSelectedTab] = React.useState<T>(tabs[0])\n\n  return (\n    <>\n      <div className=\"flex flex-row\">\n        {tabs.map((tab) => (\n          <button\n            key={tab}\n            className={`flex-grow-0 px-8 py-2 text-lg border rounded-t focus:outline-none hover:bg-accent ${\n              tab === selectedTab ? 'border-b-0' : ''\n            }`}\n            onClick={() => setSelectedTab(tab)}>\n            {tab}\n          </button>\n        ))}\n        <div className=\"flex-grow border-b\" />\n      </div>\n      <div className=\"border border-t-0 rounded-b\" style={{ minHeight: 100 }}>\n        {tabs.map((tab) => (\n          <div\n            key={tab}\n            className={`divide-y-2 ${tab !== selectedTab ? 'hidden' : ''}`}>\n            {items[tab].map((item, i) => children(item, i))}\n          </div>\n        ))}\n      </div>\n    </>\n  )\n}\n","import { PageHeader } from '@/components/atoms/page-header'\nimport { MemberCard } from '@/components/molecules/MemberCard'\nimport { Tab } from '@/components/organisms/Tab'\nimport type { MembersPageQuery } from '@gql'\nimport { graphql } from 'gatsby'\nimport Link from 'gatsby-link'\nimport * as React from 'react'\nimport { Helmet } from 'react-helmet'\n\nexport const pageQuery = graphql`\n  query MembersPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    activeMemvers: allMember(filter: { isGraduated: { ne: true } }) {\n      nodes {\n        ...memberInfo\n      }\n    }\n    graduatedMembers: allMember(filter: { isGraduated: { eq: true } }) {\n      nodes {\n        ...memberInfo\n      }\n    }\n  }\n\n  fragment memberInfo on Member {\n    name\n    position\n    nameJa\n    id\n    joinedAt\n    belongs {\n      faculty {\n        name\n        nameJa\n        id\n      }\n      grade\n    }\n    skills {\n      level\n      skill {\n        name\n        id\n      }\n      id\n    }\n    teams {\n      id\n      team {\n        name\n        id\n      }\n      leader\n    }\n  }\n`\n\ninterface MembersPageProps {\n  data: MembersPageQuery\n}\n\nconst MembersPage = ({ data }: MembersPageProps): JSX.Element => {\n  return (\n    <div>\n      <Helmet>\n        <title>{`メンバー | ${data.site?.siteMetadata?.title}`}</title>\n      </Helmet>\n      <PageHeader pageName=\"members\" />\n      <div className=\"flex flex-col my-5 mx-5\">\n        <h1 className=\"text-center text-3xl\">メンバー一覧</h1>\n        <p className=\"text-base px-8 md:px-16 lg:px-32\">\n          Lorem ipsum, dolor sit amet consectetur adipisicing elit. Consequatur\n          quod eveniet repellendus delectus doloribus excepturi recusandae,\n          provident porro modi adipisci facilis reiciendis accusamus tempore,\n          quisquam cumque magni ea. Aliquam, debitis.\n        </p>\n      </div>\n\n      <div className=\"container px-4 mx-auto\">\n        <Tab\n          tabs={['現役', 'OB']}\n          items={{\n            現役: data.activeMemvers.nodes,\n            OB: data.graduatedMembers.nodes,\n          }}>\n          {(member) => <MemberCard member={member} key={member.id} />}\n        </Tab>\n\n        <Link to=\"/\">Go to Top</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default MembersPage\n","import { MemberName } from '@/data/member'\nimport { SIZE_TYPE } from '@/lib/size'\nimport type { MemberIconQuery } from '@gql'\nimport { graphql, Link, useStaticQuery } from 'gatsby'\nimport Img, { GatsbyImageProps } from 'gatsby-image'\nimport * as React from 'react'\n\ntype MemberIconProps = Pick<GatsbyImageProps, 'className'> & {\n  memberName: MemberName\n  size: SIZE_TYPE\n}\n\nexport const MemberIcon: React.FC<MemberIconProps> = ({\n  memberName,\n  size,\n  ...props\n}) => {\n  const files = useStaticQuery<MemberIconQuery>(graphql`\n    query MemberIcon {\n      allFile(filter: { relativeDirectory: { eq: \"member-images\" } }) {\n        nodes {\n          name\n          xxs: childImageSharp {\n            fixed(width: 16, height: 16) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n          xs: childImageSharp {\n            fixed(width: 24, height: 24) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n          sm: childImageSharp {\n            fixed(width: 32, height: 32) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n          md: childImageSharp {\n            fixed(width: 48, height: 48) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n          lg: childImageSharp {\n            fixed(width: 64, height: 64) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n          xl: childImageSharp {\n            fixed(width: 128, height: 128) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n        }\n      }\n    }\n  `)\n  const fixedImage = React.useMemo(() => {\n    const membersOne = files.allFile.nodes.find(\n      (node) => node.name === memberName\n    )\n    if (membersOne) return membersOne\n    const defaultImage = files.allFile.nodes.find(\n      (node) => node.name === 'default'\n    )\n    if (defaultImage) return defaultImage\n    throw Error('Default Image not found')\n  }, [memberName, files])\n  const image = React.useMemo(() => {\n    const image = fixedImage[size]?.fixed\n    if (!image) throw Error(\"Image can't resolved\")\n    return image\n  }, [fixedImage, size])\n\n  return (\n    <Link to={`/members/${memberName}`}>\n      <Img\n        {...props}\n        fixed={{\n          ...image,\n          base64: image.base64 || undefined,\n          srcWebp: image.srcSetWebp || undefined,\n          srcSetWebp: image.srcSetWebp || undefined,\n        }}\n      />\n    </Link>\n  )\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}